-- Generated by Oracle SQL Developer Data Modeler 18.3.0.268.1156
--   at:        2018-12-02 13:43:50 MEZ
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



DROP TABLE mwd.accessories CASCADE CONSTRAINTS;

DROP TABLE mwd.american_wire_gauge CASCADE CONSTRAINTS;

DROP TABLE mwd.attachments CASCADE CONSTRAINTS;

DROP TABLE mwd.beads CASCADE CONSTRAINTS;

DROP TABLE mwd.chains CASCADE CONSTRAINTS;

DROP TABLE mwd.clasps CASCADE CONSTRAINTS;

DROP TABLE mwd.colors CASCADE CONSTRAINTS;

DROP TABLE mwd.crafted_ingredients CASCADE CONSTRAINTS;

DROP TABLE mwd.created_items CASCADE CONSTRAINTS;

DROP TABLE mwd.domains CASCADE CONSTRAINTS;

DROP TABLE mwd.imperial_fractions CASCADE CONSTRAINTS;

DROP TABLE mwd.ingredients CASCADE CONSTRAINTS;

DROP TABLE mwd.item_ingredients CASCADE CONSTRAINTS;

DROP TABLE mwd.item_order_sources CASCADE CONSTRAINTS;

DROP TABLE mwd.item_weaves CASCADE CONSTRAINTS;

DROP TABLE mwd.items CASCADE CONSTRAINTS;

DROP TABLE mwd.jewelry CASCADE CONSTRAINTS;

DROP TABLE mwd.kit_items CASCADE CONSTRAINTS;

DROP TABLE mwd.kits CASCADE CONSTRAINTS;

DROP TABLE mwd.lace CASCADE CONSTRAINTS;

DROP TABLE mwd.legal_persons CASCADE CONSTRAINTS;

DROP TABLE mwd.location_addresses CASCADE CONSTRAINTS;

DROP TABLE mwd.locations CASCADE CONSTRAINTS;

DROP TABLE mwd.materials CASCADE CONSTRAINTS;

DROP TABLE mwd.natural_persons CASCADE CONSTRAINTS;

DROP TABLE mwd.order_items CASCADE CONSTRAINTS;

DROP TABLE mwd.orders CASCADE CONSTRAINTS;

DROP TABLE mwd.ornaments CASCADE CONSTRAINTS;

DROP TABLE mwd.other_ingredients CASCADE CONSTRAINTS;

DROP TABLE mwd.other_items CASCADE CONSTRAINTS;

DROP TABLE mwd.persons CASCADE CONSTRAINTS;

DROP TABLE mwd.purchases CASCADE CONSTRAINTS;

DROP TABLE mwd.raw_ingredients CASCADE CONSTRAINTS;

DROP TABLE mwd.rings CASCADE CONSTRAINTS;

DROP TABLE mwd.sales CASCADE CONSTRAINTS;

DROP TABLE mwd.scales CASCADE CONSTRAINTS;

DROP TABLE mwd.set_items CASCADE CONSTRAINTS;

DROP TABLE mwd.sets CASCADE CONSTRAINTS;

DROP TABLE mwd.standard_wire_gauge CASCADE CONSTRAINTS;

DROP TABLE mwd.store_items CASCADE CONSTRAINTS;

DROP TABLE mwd.stores CASCADE CONSTRAINTS;

DROP TABLE mwd.tools CASCADE CONSTRAINTS;

DROP TABLE mwd.weave_ars CASCADE CONSTRAINTS;

DROP TABLE mwd.weaves CASCADE CONSTRAINTS;

DROP TABLE mwd.wires CASCADE CONSTRAINTS;

CREATE TABLE mwd.accessories (
    created_item_id   NUMBER NOT NULL,
    accessory_type    VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.accessories_pk ON
    mwd.accessories (
        created_item_id
    ASC );

ALTER TABLE mwd.accessories ADD CONSTRAINT accessories_pk PRIMARY KEY ( created_item_id );

CREATE TABLE mwd.american_wire_gauge (
    awg_id          NUMBER NOT NULL,
    awg             VARCHAR2(30 BYTE),
    inch_diameter   NUMBER(10, 4),
    diameter_mm     NUMBER(10, 4)
);

CREATE UNIQUE INDEX mwd.american_wire_gauge_pk ON
    mwd.american_wire_gauge (
        awg_id
    ASC );

CREATE UNIQUE INDEX mwd.american_wire_gauge_uk ON
    mwd.american_wire_gauge (
        awg
    ASC );

ALTER TABLE mwd.american_wire_gauge ADD CONSTRAINT american_wire_gauge_pk PRIMARY KEY ( awg_id );

ALTER TABLE mwd.american_wire_gauge ADD CONSTRAINT american_wire_gauge_uk UNIQUE ( awg );

CREATE TABLE mwd.attachments (
    attachment_id     NUMBER NOT NULL,
    attachment_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.attachments_pk ON
    mwd.attachments (
        attachment_id
    ASC );

ALTER TABLE mwd.attachments ADD CONSTRAINT attachments_pk PRIMARY KEY ( attachment_id );

CREATE TABLE mwd.beads (
    bead_id     NUMBER NOT NULL,
    bead_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.beads_pk ON
    mwd.beads (
        bead_id
    ASC );

ALTER TABLE mwd.beads ADD CONSTRAINT beads_pk PRIMARY KEY ( bead_id );

CREATE TABLE mwd.chains (
    chain_id     NUMBER NOT NULL,
    chain_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.chains_pk ON
    mwd.chains (
        chain_id
    ASC );

ALTER TABLE mwd.chains ADD CONSTRAINT chains_pk PRIMARY KEY ( chain_id );

CREATE TABLE mwd.clasps (
    clasp_id     NUMBER NOT NULL,
    clasp_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.clasps_pk ON
    mwd.clasps (
        clasp_id
    ASC );

ALTER TABLE mwd.clasps ADD CONSTRAINT clasps_pk PRIMARY KEY ( clasp_id );

CREATE TABLE mwd.colors (
    name          VARCHAR2(45 BYTE) NOT NULL,
    base_color    VARCHAR2(45 BYTE),
    tint          VARCHAR2(45 BYTE),
    color_type    VARCHAR2(45 BYTE),
    added_color   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.colors_pk ON
    mwd.colors (
        name
    ASC );

ALTER TABLE mwd.colors ADD CONSTRAINT colors_pk PRIMARY KEY ( name );

CREATE TABLE mwd.crafted_ingredients (
    crafted_ingredient_id          NUMBER NOT NULL,
    crafted_ingredient_type        VARCHAR2(45 BYTE),
    raw_ingredient_id              NUMBER,
    raw_ingredient_weight_amount   NUMBER(10, 4)
);

CREATE UNIQUE INDEX mwd.crafted_ingredients_pk ON
    mwd.crafted_ingredients (
        crafted_ingredient_id
    ASC );

ALTER TABLE mwd.crafted_ingredients ADD CONSTRAINT crafted_ingredients_pk PRIMARY KEY ( crafted_ingredient_id );

CREATE TABLE mwd.created_items (
    created_item_id     NUMBER NOT NULL,
    created_item_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.created_items_pk ON
    mwd.created_items (
        created_item_id
    ASC );

ALTER TABLE mwd.created_items ADD CONSTRAINT created_items_pk PRIMARY KEY ( created_item_id );

CREATE TABLE mwd.domains (
    domain_value_id          NUMBER NOT NULL,
    domain_value             VARCHAR2(100 BYTE) NOT NULL,
    domain_name              VARCHAR2(100 BYTE) NOT NULL,
    domain_refloc            VARCHAR2(100 BYTE) DEFAULT 'UNKNOWN' NOT NULL,
    sort_order               NUMBER NOT NULL,
    parent_domain_value_id   NUMBER,
    description              VARCHAR2(2000 BYTE),
    domain_type              VARCHAR2(30 BYTE) DEFAULT 'LIST_OF_VALUES' NOT NULL,
    active                   CHAR(1 BYTE) DEFAULT 'Y' NOT NULL,
    user_created             VARCHAR2(30 BYTE) NOT NULL,
    date_created             DATE NOT NULL,
    user_modified            VARCHAR2(30 BYTE) NOT NULL,
    date_modified            DATE NOT NULL
);

CREATE UNIQUE INDEX mwd.domains_pk ON
    mwd.domains (
        domain_value_id
    ASC );

CREATE UNIQUE INDEX mwd.domains_uk ON
    mwd.domains (
        domain_name
    ASC,
        domain_value
    ASC );

ALTER TABLE mwd.domains ADD CONSTRAINT domains_pk PRIMARY KEY ( domain_value_id );

ALTER TABLE mwd.domains ADD CONSTRAINT domains_uk UNIQUE ( domain_name,
                                                           domain_value );

CREATE TABLE mwd.imperial_fractions (
    inch_fraction   VARCHAR2(30 BYTE) NOT NULL,
    inch_diameter   NUMBER(10, 4),
    diameter_mm     NUMBER(10, 4)
);

CREATE UNIQUE INDEX mwd.imperial_fractions_pk ON
    mwd.imperial_fractions (
        inch_fraction
    ASC );

ALTER TABLE mwd.imperial_fractions ADD CONSTRAINT imperial_fractions_pk PRIMARY KEY ( inch_fraction );

ALTER TABLE mwd.imperial_fractions ADD CONSTRAINT imperial_fractions_pkv1 UNIQUE ( inch_fraction );


CREATE TABLE MWD.IMPERIAL_FRACTIONS_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,INCH_FRACTION VARCHAR2 (30 BYTE) NOT NULL
 ,INCH_DIAMETER NUMBER (10,4)
 ,DIAMETER_MM NUMBER (10,4)
 );

CREATE OR REPLACE TRIGGER MWD.IMPERIAL_FRACTIONS_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON MWD.IMPERIAL_FRACTIONS for each row 
 Declare 
  rec MWD.IMPERIAL_FRACTIONS_JN%ROWTYPE; 
  blank MWD.IMPERIAL_FRACTIONS_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.INCH_FRACTION := :NEW.INCH_FRACTION; 
      rec.INCH_DIAMETER := :NEW.INCH_DIAMETER; 
      rec.DIAMETER_MM := :NEW.DIAMETER_MM; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.INCH_FRACTION := :OLD.INCH_FRACTION; 
      rec.INCH_DIAMETER := :OLD.INCH_DIAMETER; 
      rec.DIAMETER_MM := :OLD.DIAMETER_MM; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into MWD.IMPERIAL_FRACTIONS_JN VALUES rec; 
  END; 
  /CREATE TABLE mwd.ingredients (
    ingredient_id         NUMBER NOT NULL,
    material              VARCHAR2(45 BYTE) DEFAULT 'OTHER',
    color                 VARCHAR2(45 BYTE) DEFAULT 'NATURAL',
    wire_diameter_mm      NUMBER(8, 2),
    inner_diameter_mm     NUMBER(8, 2),
    outer_diameter_mm     NUMBER(8, 2),
    aspect_ratio          NUMBER(8, 2),
    opening_diameter_mm   NUMBER(8, 2),
    ingredient_type       VARCHAR2(45 BYTE),
    wire_diameter_swg     VARCHAR2(30 BYTE),
    wire_diameter_awg     VARCHAR2(30 BYTE),
    inner_diameter_inch   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.ingredients_pk ON
    mwd.ingredients (
        ingredient_id
    ASC );

CREATE UNIQUE INDEX mwd.ingredients_uk ON
    mwd.ingredients (
        material
    ASC );

ALTER TABLE mwd.ingredients ADD CONSTRAINT ingredients_pk PRIMARY KEY ( ingredient_id );

CREATE TABLE mwd.item_ingredients (
    item_ingredient_id   NUMBER(3) NOT NULL,
    item_id              NUMBER NOT NULL,
    ingredient_id        NUMBER NOT NULL,
    unit_price           NUMBER(8, 2) DEFAULT 0,
    quantity             NUMBER(8) DEFAULT 0
);

CREATE UNIQUE INDEX mwd.item_ingredients_pk ON
    mwd.item_ingredients (
        item_ingredient_id
    ASC );

CREATE UNIQUE INDEX mwd.item_ingredients_uk ON
    mwd.item_ingredients (
        item_id
    ASC,
        ingredient_id
    ASC );

ALTER TABLE mwd.item_ingredients ADD CONSTRAINT item_ingredients_pk PRIMARY KEY ( item_ingredient_id );

ALTER TABLE mwd.item_ingredients ADD CONSTRAINT item_ingredients_uk UNIQUE ( item_id,
                                                                             ingredient_id );

CREATE TABLE mwd.item_order_sources (
    item_order_source_id   NUMBER NOT NULL,
    item_id                NUMBER NOT NULL,
    source_productcode     VARCHAR2(45 BYTE),
    source_unit_price      NUMBER(8, 2) DEFAULT 0,
    source_amount          NUMBER DEFAULT 0,
    source_brand           VARCHAR2(500 BYTE),
    source_order_url       VARCHAR2(2000 BYTE),
    modified_date          TIMESTAMP WITH LOCAL TIME ZONE
);

CREATE UNIQUE INDEX mwd.item_order_sources_pk ON
    mwd.item_order_sources (
        item_id
    ASC );

CREATE UNIQUE INDEX mwd.item_order_sources_un ON
    mwd.item_order_sources (
        item_id
    ASC,
        source_productcode
    ASC );

CREATE UNIQUE INDEX mwd.item_order_sources_un2 ON
    mwd.item_order_sources (
        source_productcode
    ASC,
        source_brand
    ASC );

ALTER TABLE mwd.item_order_sources ADD CONSTRAINT item_order_sources_un UNIQUE ( item_id,
                                                                                 source_productcode );

ALTER TABLE mwd.item_order_sources ADD CONSTRAINT item_order_sources_un2 UNIQUE ( source_productcode,
                                                                                  source_brand );

CREATE TABLE mwd.item_weaves (
    item_weave_id   NUMBER NOT NULL,
    item_id         NUMBER NOT NULL,
    weave_id        NUMBER NOT NULL,
    ingredient_id   NUMBER,
    ring_quantity   NUMBER DEFAULT 1
);

CREATE UNIQUE INDEX mwd.item_weaves_pk ON
    mwd.item_weaves (
        item_weave_id
    ASC );

CREATE UNIQUE INDEX mwd.item_weaves_uk ON
    mwd.item_weaves (
        item_id
    ASC,
        weave_id
    ASC,
        ingredient_id
    ASC );

ALTER TABLE mwd.item_weaves ADD CONSTRAINT item_weaves_pk PRIMARY KEY ( item_weave_id );

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_uk UNIQUE ( item_id,
                                           weave_id,
                                           ingredient_id );

CREATE TABLE mwd.items (
    item_id            NUMBER NOT NULL,
    name               VARCHAR2(30 BYTE) NOT NULL,
    list_price         NUMBER(8, 2) DEFAULT 0,
    availability       VARCHAR2(30 BYTE) DEFAULT 'IN_STOCK',
    sale_status        VARCHAR2(30 BYTE) DEFAULT 'NONE',
    item_type          VARCHAR2(45 BYTE),
    description        VARCHAR2(2000 BYTE),
    cost_total         NUMBER(8, 2) DEFAULT 0,
    time_min           NUMBER DEFAULT 0,
    length_mm          NUMBER(8, 2),
    width_mm           NUMBER(8, 2),
    thickness_mm       NUMBER(8, 2),
    height_mm          NUMBER(8, 2),
    weight_gr          NUMBER(8, 2),
    current_amount     NUMBER,
    purchased_amount   NUMBER
);

CREATE INDEX mwd.items_ix ON
    mwd.items (
        sale_status
    ASC );

CREATE INDEX mwd.items_ix2 ON
    mwd.items (
        item_type
    ASC );

CREATE UNIQUE INDEX mwd.items_pk ON
    mwd.items (
        item_id
    ASC );

CREATE UNIQUE INDEX mwd.items_uk ON
    mwd.items (
        name
    ASC );

ALTER TABLE mwd.items ADD CONSTRAINT items_pk PRIMARY KEY ( item_id );

ALTER TABLE mwd.items ADD CONSTRAINT items_uk UNIQUE ( name );

CREATE TABLE mwd.jewelry (
    created_item_id   NUMBER NOT NULL,
    jewelry_type      VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.jewelry_pk ON
    mwd.jewelry (
        created_item_id
    ASC );

ALTER TABLE mwd.jewelry ADD CONSTRAINT jewelry_pk PRIMARY KEY ( created_item_id );

CREATE TABLE mwd.kit_items (
    kit_item_id   NUMBER NOT NULL,
    kit_id        NUMBER NOT NULL,
    item_id       NUMBER NOT NULL,
    unit_price    NUMBER(8, 2) DEFAULT 0 NOT NULL,
    quantity      NUMBER(8) DEFAULT 1 NOT NULL
);

CREATE UNIQUE INDEX mwd.kit_items_pk ON
    mwd.kit_items (
        kit_item_id
    ASC );

CREATE UNIQUE INDEX mwd.kit_items_uk ON
    mwd.kit_items (
        kit_id
    ASC,
        item_id
    ASC );

ALTER TABLE mwd.kit_items ADD CONSTRAINT kit_items_pk PRIMARY KEY ( kit_item_id );

ALTER TABLE mwd.kit_items ADD CONSTRAINT kit_items_uk UNIQUE ( kit_id,
                                                               item_id );

ALTER TABLE mwd.kit_items ADD CONSTRAINT kit_items_uk2 UNIQUE ( kit_id );

CREATE TABLE mwd.kits (
    kit_id         NUMBER NOT NULL,
    name           VARCHAR2(30 BYTE),
    list_price     NUMBER(8, 2) DEFAULT 0 NOT NULL,
    availability   VARCHAR2(30 BYTE) DEFAULT 'IN_STOCK',
    sale_status    VARCHAR2(30 BYTE) DEFAULT 'NONE'
);

CREATE UNIQUE INDEX mwd.kits_pk ON
    mwd.kits (
        kit_id
    ASC );

CREATE UNIQUE INDEX mwd.kits_uk ON
    mwd.kits (
        name
    ASC );

ALTER TABLE mwd.kits ADD CONSTRAINT kits_pk PRIMARY KEY ( kit_id );

ALTER TABLE mwd.kits ADD CONSTRAINT kits_uk UNIQUE ( name );

CREATE TABLE mwd.lace (
    lace_id     NUMBER NOT NULL,
    lace_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.lace_pk ON
    mwd.lace (
        lace_id
    ASC );

ALTER TABLE mwd.lace ADD CONSTRAINT lace_pk PRIMARY KEY ( lace_id );

CREATE TABLE mwd.legal_persons (
    person_id    NUMBER NOT NULL,
    legal_name   VARCHAR2(30 BYTE) NOT NULL,
    website      VARCHAR2(2000 BYTE)
);

CREATE UNIQUE INDEX mwd.legal_persons_ix ON
    mwd.legal_persons (
        legal_name
    ASC );

CREATE UNIQUE INDEX mwd.legal_persons_pk ON
    mwd.legal_persons (
        person_id
    ASC );

ALTER TABLE mwd.legal_persons ADD CONSTRAINT legal_persons_pk PRIMARY KEY ( person_id );

CREATE TABLE mwd.location_addresses (
    location_address_id   NUMBER NOT NULL,
    location_id           NUMBER NOT NULL,
    street                VARCHAR2(255 BYTE),
    nr                    NUMBER,
    nr_addition           VARCHAR2(5 BYTE),
    city                  VARCHAR2(50 BYTE),
    country               VARCHAR2(50 BYTE),
    postal_code           VARCHAR2(12 BYTE),
    latitude              NUMBER(9, 6),
    longitude             NUMBER(9, 6),
    is_main               CHAR(1 BYTE),
    is_active             CHAR(1 BYTE),
    address_type          VARCHAR2(30 BYTE)
);

CREATE INDEX mwd.location_addresses_ix ON
    mwd.location_addresses (
        city
    ASC );

CREATE UNIQUE INDEX mwd.location_addresses_pk ON
    mwd.location_addresses (
        location_address_id
    ASC );

ALTER TABLE mwd.location_addresses ADD CONSTRAINT location_addresses_pk PRIMARY KEY ( location_address_id );

CREATE TABLE mwd.locations (
    location_id   NUMBER NOT NULL,
    person_id     NUMBER NOT NULL
);

CREATE UNIQUE INDEX mwd.locations_pk ON
    mwd.locations (
        location_id
    ASC );

ALTER TABLE mwd.locations ADD CONSTRAINT locations_pk PRIMARY KEY ( location_id );

CREATE TABLE mwd.materials (
    abbreviation              VARCHAR2(45 BYTE) NOT NULL,
    base_material             VARCHAR2(45 BYTE),
    processing                VARCHAR2(45 BYTE),
    processing_material       VARCHAR2(45 BYTE),
    allergens_excluded        VARCHAR2(45 BYTE),
    base_materials_included   VARCHAR2(2000 BYTE),
    parent_material           VARCHAR2(45 BYTE)
);

CREATE INDEX mwd.materials_pk ON
    mwd.materials (
        abbreviation
    ASC );

ALTER TABLE mwd.materials ADD CONSTRAINT materials_pk PRIMARY KEY ( abbreviation );

CREATE TABLE mwd.natural_persons (
    person_id    NUMBER NOT NULL,
    first_name   VARCHAR2(30 BYTE) NOT NULL,
    last_name    VARCHAR2(30 BYTE) NOT NULL
);

CREATE INDEX mwd.natural_persons_ix ON
    mwd.natural_persons (
        last_name
    ASC,
        first_name
    ASC );

CREATE UNIQUE INDEX mwd.natural_persons_pk ON
    mwd.natural_persons (
        person_id
    ASC );

ALTER TABLE mwd.natural_persons ADD CONSTRAINT natural_persons_pk PRIMARY KEY ( person_id );

CREATE TABLE mwd.order_items (
    order_item_id    NUMBER(3) NOT NULL,
    order_id         NUMBER NOT NULL,
    item_id          NUMBER NOT NULL,
    unit_price       NUMBER(8, 2) DEFAULT 0 NOT NULL,
    quantity         NUMBER(8) DEFAULT 1 NOT NULL,
    item_status      VARCHAR2(30 BYTE) DEFAULT 'NOT_MADE' NOT NULL,
    order_item_url   VARCHAR2(2000 BYTE)
);

COMMENT ON COLUMN mwd.order_items.item_status IS
    'ENUM(''TO_DELIVER'', ''DELIVERED'', ''CANCELLED''), DEFAULT ''TO_DELIVER''';

CREATE UNIQUE INDEX mwd.order_items_pk ON
    mwd.order_items (
        order_item_id
    ASC );

CREATE UNIQUE INDEX mwd.order_items_uk ON
    mwd.order_items (
        order_id
    ASC,
        item_id
    ASC );

CREATE UNIQUE INDEX mwd.order_items_uk2 ON
    mwd.order_items (
        order_id
    ASC );

CREATE UNIQUE INDEX mwd.order_items_uk3 ON
    mwd.order_items (
        order_id
    ASC,
        order_item_id
    ASC );

ALTER TABLE mwd.order_items ADD CONSTRAINT order_items_pk PRIMARY KEY ( order_item_id );

ALTER TABLE mwd.order_items ADD CONSTRAINT order_items_uk UNIQUE ( order_id,
                                                                   item_id );

ALTER TABLE mwd.order_items ADD CONSTRAINT order_items_uk2 UNIQUE ( order_id,
                                                                    order_item_id );

CREATE TABLE mwd.orders (
    order_id              NUMBER NOT NULL,
    location_address_id   NUMBER,
    person_id             NUMBER,
    order_type            VARCHAR2(30 BYTE) DEFAULT 'SALE' NOT NULL,
    order_date            TIMESTAMP WITH LOCAL TIME ZONE,
    shipping              NUMBER(10, 2),
    is_online             CHAR(1 BYTE)
);

CREATE UNIQUE INDEX mwd.orders_pk ON
    mwd.orders (
        order_id
    ASC );

ALTER TABLE mwd.orders ADD CONSTRAINT orders_pk PRIMARY KEY ( order_id );

CREATE TABLE mwd.ornaments (
    created_item_id   NUMBER NOT NULL,
    ornament_type     VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.ornaments_pk ON
    mwd.ornaments (
        created_item_id
    ASC );

ALTER TABLE mwd.ornaments ADD CONSTRAINT ornaments_pk PRIMARY KEY ( created_item_id );

CREATE TABLE mwd.other_ingredients (
    other_ingredient_id     NUMBER NOT NULL,
    other_ingredient_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.other_ingredients_pk ON
    mwd.other_ingredients (
        other_ingredient_id
    ASC );

ALTER TABLE mwd.other_ingredients ADD CONSTRAINT other_ingredients_pk PRIMARY KEY ( other_ingredient_id );

CREATE TABLE mwd.other_items (
    other_item_id     NUMBER NOT NULL,
    other_item_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.other_items_pk ON
    mwd.other_items (
        other_item_id
    ASC );

ALTER TABLE mwd.other_items ADD CONSTRAINT other_items_pk PRIMARY KEY ( other_item_id );

CREATE TABLE mwd.persons (
    person_id       NUMBER NOT NULL,
    email           VARCHAR2(30 BYTE),
    phone_fixed     VARCHAR2(30 BYTE),
    is_competitor   CHAR(1 BYTE) NOT NULL,
    person_type     VARCHAR2(30 BYTE)
);

CREATE UNIQUE INDEX mwd.persons_pk ON
    mwd.persons (
        person_id
    ASC );

ALTER TABLE mwd.persons ADD CONSTRAINT persons_pk PRIMARY KEY ( person_id );

CREATE TABLE mwd.purchases (
    order_id       NUMBER NOT NULL,
    order_status   VARCHAR2(45 BYTE) NOT NULL,
    tax_returned   CHAR(1 BYTE)
);

CREATE UNIQUE INDEX mwd.purchases_pk ON
    mwd.purchases (
        order_id
    ASC );

ALTER TABLE mwd.purchases ADD CONSTRAINT purchases_pk PRIMARY KEY ( order_id );

CREATE TABLE mwd.raw_ingredients (
    raw_ingredient_id     NUMBER NOT NULL,
    raw_ingredient_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.raw_ingredients_pk ON
    mwd.raw_ingredients (
        raw_ingredient_id
    ASC );

ALTER TABLE mwd.raw_ingredients ADD CONSTRAINT raw_ingredients_pk PRIMARY KEY ( raw_ingredient_id );

CREATE TABLE mwd.rings (
    ring_id     NUMBER NOT NULL,
    ring_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.rings_pk ON
    mwd.rings (
        ring_id
    ASC );

ALTER TABLE mwd.rings ADD CONSTRAINT rings_pk PRIMARY KEY ( ring_id );

CREATE TABLE mwd.sales (
    order_id          NUMBER NOT NULL,
    invoice_year      VARCHAR2(4 BYTE) NOT NULL,
    invoice_quarter   VARCHAR2(3 BYTE) NOT NULL,
    invoice_number    VARCHAR2(45 BYTE) NOT NULL,
    order_status      VARCHAR2(45 BYTE) NOT NULL,
    complete_date     TIMESTAMP WITH LOCAL TIME ZONE
);

CREATE UNIQUE INDEX mwd.sales_ix ON
    mwd.sales (
        invoice_year
    ASC,
        invoice_quarter
    ASC,
        invoice_number
    ASC );

CREATE UNIQUE INDEX mwd.sales_pk ON
    mwd.sales (
        order_id
    ASC );

ALTER TABLE mwd.sales ADD CONSTRAINT sales_pk PRIMARY KEY ( order_id );

CREATE TABLE mwd.scales (
    scale_id     NUMBER NOT NULL,
    scale_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.scales_pk ON
    mwd.scales (
        scale_id
    ASC );

ALTER TABLE mwd.scales ADD CONSTRAINT scales_pk PRIMARY KEY ( scale_id );

CREATE TABLE mwd.set_items (
    set_item_id       NUMBER NOT NULL,
    set_id            NUMBER NOT NULL,
    created_item_id   NUMBER NOT NULL,
    unit_price        NUMBER(8, 2) DEFAULT 0 NOT NULL,
    quantity          NUMBER(8) DEFAULT 1 NOT NULL
);

CREATE UNIQUE INDEX mwd.set_items_pk ON
    mwd.set_items (
        set_item_id
    ASC );

CREATE UNIQUE INDEX mwd.set_items_uk ON
    mwd.set_items (
        set_id
    ASC,
        created_item_id
    ASC );

ALTER TABLE mwd.set_items ADD CONSTRAINT set_items_pk PRIMARY KEY ( set_item_id );

ALTER TABLE mwd.set_items ADD CONSTRAINT set_items_uk UNIQUE ( set_id,
                                                               created_item_id );

CREATE TABLE mwd.sets (
    set_id         NUMBER NOT NULL,
    name           VARCHAR2(45 BYTE),
    list_price     NUMBER(8, 2) DEFAULT 0 NOT NULL,
    availability   VARCHAR2(45 BYTE) DEFAULT 'IN_STOCK',
    sale_status    VARCHAR2(45 BYTE) DEFAULT 'NONE'
);

CREATE UNIQUE INDEX mwd.sets_pk ON
    mwd.sets (
        set_id
    ASC );

CREATE UNIQUE INDEX mwd.sets_uk ON
    mwd.sets (
        name
    ASC );

ALTER TABLE mwd.sets ADD CONSTRAINT sets_pk PRIMARY KEY ( set_id );

ALTER TABLE mwd.sets ADD CONSTRAINT sets_uk UNIQUE ( name );

CREATE TABLE mwd.standard_wire_gauge (
    swg_id          NUMBER NOT NULL,
    swg             VARCHAR2(30 BYTE),
    inch_diameter   NUMBER(10, 4),
    diameter_mm     NUMBER(10, 4)
);

CREATE UNIQUE INDEX mwd.standard_wire_gauge_pk ON
    mwd.standard_wire_gauge (
        swg_id
    ASC );

CREATE UNIQUE INDEX mwd.standard_wire_gauge_uk ON
    mwd.standard_wire_gauge (
        swg
    ASC );

ALTER TABLE mwd.standard_wire_gauge ADD CONSTRAINT standard_wire_gauge_pk PRIMARY KEY ( swg_id );

ALTER TABLE mwd.standard_wire_gauge ADD CONSTRAINT standard_wire_gauge_uk UNIQUE ( swg );

CREATE TABLE mwd.store_items (
    store_item_id     NUMBER NOT NULL,
    store_id          NUMBER NOT NULL,
    item_id           NUMBER NOT NULL,
    unit_price        NUMBER(8, 2) DEFAULT 0 NOT NULL,
    sale_start_date   DATE,
    discount_pct      NUMBER(4, 2),
    sale_end_date     DATE
);

CREATE UNIQUE INDEX mwd.store_items_pk ON
    mwd.store_items (
        store_item_id
    ASC );

ALTER TABLE mwd.store_items ADD CONSTRAINT store_items_pk PRIMARY KEY ( store_item_id );

ALTER TABLE mwd.store_items ADD CONSTRAINT store_items_uk UNIQUE ( store_id,
                                                                   item_id );

CREATE TABLE mwd.stores (
    store_id              NUMBER NOT NULL,
    name                  VARCHAR2(255 BYTE),
    website               VARCHAR2(2000 BYTE),
    open_date             TIMESTAMP WITH LOCAL TIME ZONE,
    store_type            VARCHAR2(50 BYTE),
    location_address_id   NUMBER NOT NULL,
    legal_person_id       NUMBER NOT NULL
);

CREATE UNIQUE INDEX mwd.stores_pk ON
    mwd.stores (
        store_id
    ASC );

ALTER TABLE mwd.stores ADD CONSTRAINT stores_pk PRIMARY KEY ( store_id );

CREATE TABLE mwd.tools (
    tool_id     NUMBER NOT NULL,
    tool_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.tools_pk ON
    mwd.tools (
        tool_id
    ASC );

ALTER TABLE mwd.tools ADD CONSTRAINT tools_pk PRIMARY KEY ( tool_id );

CREATE TABLE mwd.weave_ars (
    weave_ar_id     NUMBER NOT NULL,
    weave_id        NUMBER NOT NULL,
    optimal_ar      NUMBER(8, 2),
    min_ar          NUMBER(8, 2),
    max_ar          NUMBER(8, 2),
    ar_sort_order   NUMBER(8)
);

CREATE UNIQUE INDEX mwd.weave_ars_pk ON
    mwd.weave_ars (
        weave_ar_id
    ASC );

CREATE UNIQUE INDEX mwd.weave_ars_uk ON
    mwd.weave_ars (
        weave_id
    ASC,
        optimal_ar
    ASC );

ALTER TABLE mwd.weave_ars ADD CONSTRAINT weave_ars_pk PRIMARY KEY ( weave_ar_id );

ALTER TABLE mwd.weave_ars ADD CONSTRAINT weave_ars_uk UNIQUE ( weave_id,
                                                               optimal_ar );

CREATE TABLE mwd.weaves (
    weave_id          NUMBER NOT NULL,
    name              VARCHAR2(30 BYTE),
    synonyms          VARCHAR2(2000 BYTE),
    parent_weave_id   NUMBER,
    complexity        VARCHAR2(30 BYTE) DEFAULT 'BEGINNER',
    description       VARCHAR2(2000 BYTE),
    speed_weave       VARCHAR2(2000 BYTE),
    source_url        VARCHAR2(2000 BYTE)
);

CREATE UNIQUE INDEX mwd.weaves_pk ON
    mwd.weaves (
        weave_id
    ASC );

CREATE UNIQUE INDEX mwd.weaves_uk ON
    mwd.weaves (
        name
    ASC );

ALTER TABLE mwd.weaves ADD CONSTRAINT weaves_pk PRIMARY KEY ( weave_id );

ALTER TABLE mwd.weaves ADD CONSTRAINT weaves_uk UNIQUE ( name );

CREATE TABLE mwd.wires (
    wire_id     NUMBER NOT NULL,
    wire_type   VARCHAR2(45 BYTE)
);

CREATE UNIQUE INDEX mwd.wires_pk ON
    mwd.wires (
        wire_id
    ASC );

ALTER TABLE mwd.wires ADD CONSTRAINT wires_pk PRIMARY KEY ( wire_id );

ALTER TABLE mwd.accessories
    ADD CONSTRAINT accessories_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.attachments
    ADD CONSTRAINT attachments_fk FOREIGN KEY ( attachment_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.beads
    ADD CONSTRAINT beads_fk FOREIGN KEY ( bead_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.chains
    ADD CONSTRAINT chains_fk FOREIGN KEY ( chain_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.clasps
    ADD CONSTRAINT clasps_fk FOREIGN KEY ( clasp_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.colors
    ADD CONSTRAINT colors_fk FOREIGN KEY ( added_color )
        REFERENCES mwd.colors ( name );

ALTER TABLE mwd.crafted_ingredients
    ADD CONSTRAINT crafted_ingredients_fk FOREIGN KEY ( crafted_ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.crafted_ingredients
    ADD CONSTRAINT crafted_ingredients_fk2 FOREIGN KEY ( raw_ingredient_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.created_items
    ADD CONSTRAINT created_items_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.domains
    ADD CONSTRAINT domains_fk FOREIGN KEY ( parent_domain_value_id )
        REFERENCES mwd.domains ( domain_value_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk FOREIGN KEY ( ingredient_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk2 FOREIGN KEY ( wire_diameter_swg )
        REFERENCES mwd.standard_wire_gauge ( swg );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk3 FOREIGN KEY ( wire_diameter_awg )
        REFERENCES mwd.american_wire_gauge ( awg );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk4 FOREIGN KEY ( inner_diameter_inch )
        REFERENCES mwd.imperial_fractions ( inch_fraction );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk5 FOREIGN KEY ( material )
        REFERENCES mwd.materials ( abbreviation );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk6 FOREIGN KEY ( color )
        REFERENCES mwd.colors ( name );

ALTER TABLE mwd.item_ingredients
    ADD CONSTRAINT item_ingredients_fk FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_ingredients
    ADD CONSTRAINT item_ingredients_fk2 FOREIGN KEY ( ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_order_sources
    ADD CONSTRAINT item_order_sources_fk FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_fk FOREIGN KEY ( weave_id )
        REFERENCES mwd.weaves ( weave_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_fk2 FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_fk3 FOREIGN KEY ( ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.jewelry
    ADD CONSTRAINT jewelry_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.kit_items
    ADD CONSTRAINT kit_items_fk FOREIGN KEY ( kit_id )
        REFERENCES mwd.kits ( kit_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.kit_items
    ADD CONSTRAINT kit_items_fk2 FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.kits
    ADD CONSTRAINT kits_fk FOREIGN KEY ( kit_id )
        REFERENCES mwd.items ( item_id );

ALTER TABLE mwd.lace
    ADD CONSTRAINT lace_fk FOREIGN KEY ( lace_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.legal_persons
    ADD CONSTRAINT legal_persons_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.location_addresses
    ADD CONSTRAINT location_addresses_fk FOREIGN KEY ( location_id )
        REFERENCES mwd.locations ( location_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.locations
    ADD CONSTRAINT locations_persons_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.materials
    ADD CONSTRAINT materials_materials_fk FOREIGN KEY ( parent_material )
        REFERENCES mwd.materials ( abbreviation );

ALTER TABLE mwd.natural_persons
    ADD CONSTRAINT natural_persons_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.order_items
    ADD CONSTRAINT order_items_fk FOREIGN KEY ( order_id )
        REFERENCES mwd.orders ( order_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.order_items
    ADD CONSTRAINT order_items_fk2 FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.orders
    ADD CONSTRAINT orders_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.orders
    ADD CONSTRAINT orders_fk2 FOREIGN KEY ( location_address_id )
        REFERENCES mwd.location_addresses ( location_address_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.ornaments
    ADD CONSTRAINT ornaments_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.other_ingredients
    ADD CONSTRAINT other_ingredients_fk FOREIGN KEY ( other_ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.other_items
    ADD CONSTRAINT other_items_fk FOREIGN KEY ( other_item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.purchases
    ADD CONSTRAINT purchases_fk FOREIGN KEY ( order_id )
        REFERENCES mwd.orders ( order_id );

ALTER TABLE mwd.raw_ingredients
    ADD CONSTRAINT raw_ingredients_fk FOREIGN KEY ( raw_ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.rings
    ADD CONSTRAINT rings_fk FOREIGN KEY ( ring_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.sales
    ADD CONSTRAINT sales_fk FOREIGN KEY ( order_id )
        REFERENCES mwd.orders ( order_id );

ALTER TABLE mwd.scales
    ADD CONSTRAINT scales_fk FOREIGN KEY ( scale_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.set_items
    ADD CONSTRAINT set_items_fk FOREIGN KEY ( set_id )
        REFERENCES mwd.sets ( set_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.set_items
    ADD CONSTRAINT set_items_fk2 FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.sets
    ADD CONSTRAINT sets_items_fk FOREIGN KEY ( set_id )
        REFERENCES mwd.items ( item_id );

ALTER TABLE mwd.store_items
    ADD CONSTRAINT store_items_fk FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.store_items
    ADD CONSTRAINT store_items_fk2 FOREIGN KEY ( store_id )
        REFERENCES mwd.stores ( store_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.stores
    ADD CONSTRAINT stores_fk FOREIGN KEY ( location_address_id )
        REFERENCES mwd.location_addresses ( location_address_id );

ALTER TABLE mwd.stores
    ADD CONSTRAINT stores_fk2 FOREIGN KEY ( legal_person_id )
        REFERENCES mwd.legal_persons ( person_id );

ALTER TABLE mwd.tools
    ADD CONSTRAINT tools_fk FOREIGN KEY ( tool_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.weave_ars
    ADD CONSTRAINT weave_ars_fk FOREIGN KEY ( weave_id )
        REFERENCES mwd.weaves ( weave_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.weaves
    ADD CONSTRAINT weaves_fk FOREIGN KEY ( parent_weave_id )
        REFERENCES mwd.weaves ( weave_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.wires
    ADD CONSTRAINT wires_fk FOREIGN KEY ( wire_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.accessories
    ADD CONSTRAINT accessories_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.attachments
    ADD CONSTRAINT attachments_fk FOREIGN KEY ( attachment_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.beads
    ADD CONSTRAINT beads_fk FOREIGN KEY ( bead_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.chains
    ADD CONSTRAINT chains_fk FOREIGN KEY ( chain_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.clasps
    ADD CONSTRAINT clasps_fk FOREIGN KEY ( clasp_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.colors
    ADD CONSTRAINT colors_fk FOREIGN KEY ( added_color )
        REFERENCES mwd.colors ( name );

ALTER TABLE mwd.crafted_ingredients
    ADD CONSTRAINT crafted_ingredients_fk FOREIGN KEY ( crafted_ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.crafted_ingredients
    ADD CONSTRAINT crafted_ingredients_fk2 FOREIGN KEY ( raw_ingredient_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.created_items
    ADD CONSTRAINT created_items_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.domains
    ADD CONSTRAINT domains_fk FOREIGN KEY ( parent_domain_value_id )
        REFERENCES mwd.domains ( domain_value_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk FOREIGN KEY ( ingredient_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk2 FOREIGN KEY ( wire_diameter_swg )
        REFERENCES mwd.standard_wire_gauge ( swg );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk3 FOREIGN KEY ( wire_diameter_awg )
        REFERENCES mwd.american_wire_gauge ( awg );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk4 FOREIGN KEY ( inner_diameter_inch )
        REFERENCES mwd.imperial_fractions ( inch_fraction );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk5 FOREIGN KEY ( material )
        REFERENCES mwd.materials ( abbreviation );

ALTER TABLE mwd.ingredients
    ADD CONSTRAINT ingredients_fk6 FOREIGN KEY ( color )
        REFERENCES mwd.colors ( name );

ALTER TABLE mwd.item_ingredients
    ADD CONSTRAINT item_ingredients_fk FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_ingredients
    ADD CONSTRAINT item_ingredients_fk2 FOREIGN KEY ( ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_order_sources
    ADD CONSTRAINT item_order_sources_fk FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_fk FOREIGN KEY ( weave_id )
        REFERENCES mwd.weaves ( weave_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_fk2 FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.item_weaves
    ADD CONSTRAINT item_weaves_fk3 FOREIGN KEY ( ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.jewelry
    ADD CONSTRAINT jewelry_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.kit_items
    ADD CONSTRAINT kit_items_fk FOREIGN KEY ( kit_id )
        REFERENCES mwd.kits ( kit_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.kit_items
    ADD CONSTRAINT kit_items_fk2 FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.kits
    ADD CONSTRAINT kits_fk FOREIGN KEY ( kit_id )
        REFERENCES mwd.items ( item_id );

ALTER TABLE mwd.lace
    ADD CONSTRAINT lace_fk FOREIGN KEY ( lace_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.legal_persons
    ADD CONSTRAINT legal_persons_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.location_addresses
    ADD CONSTRAINT location_addresses_fk FOREIGN KEY ( location_id )
        REFERENCES mwd.locations ( location_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.locations
    ADD CONSTRAINT locations_persons_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.materials
    ADD CONSTRAINT materials_materials_fk FOREIGN KEY ( parent_material )
        REFERENCES mwd.materials ( abbreviation );

ALTER TABLE mwd.natural_persons
    ADD CONSTRAINT natural_persons_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.order_items
    ADD CONSTRAINT order_items_fk FOREIGN KEY ( order_id )
        REFERENCES mwd.orders ( order_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.order_items
    ADD CONSTRAINT order_items_fk2 FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.orders
    ADD CONSTRAINT orders_fk FOREIGN KEY ( person_id )
        REFERENCES mwd.persons ( person_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.orders
    ADD CONSTRAINT orders_fk2 FOREIGN KEY ( location_address_id )
        REFERENCES mwd.location_addresses ( location_address_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.ornaments
    ADD CONSTRAINT ornaments_fk FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.other_ingredients
    ADD CONSTRAINT other_ingredients_fk FOREIGN KEY ( other_ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.other_items
    ADD CONSTRAINT other_items_fk FOREIGN KEY ( other_item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.purchases
    ADD CONSTRAINT purchases_fk FOREIGN KEY ( order_id )
        REFERENCES mwd.orders ( order_id );

ALTER TABLE mwd.raw_ingredients
    ADD CONSTRAINT raw_ingredients_fk FOREIGN KEY ( raw_ingredient_id )
        REFERENCES mwd.ingredients ( ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.rings
    ADD CONSTRAINT rings_fk FOREIGN KEY ( ring_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.sales
    ADD CONSTRAINT sales_fk FOREIGN KEY ( order_id )
        REFERENCES mwd.orders ( order_id );

ALTER TABLE mwd.scales
    ADD CONSTRAINT scales_fk FOREIGN KEY ( scale_id )
        REFERENCES mwd.crafted_ingredients ( crafted_ingredient_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.set_items
    ADD CONSTRAINT set_items_fk FOREIGN KEY ( set_id )
        REFERENCES mwd.sets ( set_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.set_items
    ADD CONSTRAINT set_items_fk2 FOREIGN KEY ( created_item_id )
        REFERENCES mwd.created_items ( created_item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.sets
    ADD CONSTRAINT sets_items_fk FOREIGN KEY ( set_id )
        REFERENCES mwd.items ( item_id );

ALTER TABLE mwd.store_items
    ADD CONSTRAINT store_items_fk FOREIGN KEY ( item_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.store_items
    ADD CONSTRAINT store_items_fk2 FOREIGN KEY ( store_id )
        REFERENCES mwd.stores ( store_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.stores
    ADD CONSTRAINT stores_fk FOREIGN KEY ( location_address_id )
        REFERENCES mwd.location_addresses ( location_address_id );

ALTER TABLE mwd.stores
    ADD CONSTRAINT stores_fk2 FOREIGN KEY ( legal_person_id )
        REFERENCES mwd.legal_persons ( person_id );

ALTER TABLE mwd.tools
    ADD CONSTRAINT tools_fk FOREIGN KEY ( tool_id )
        REFERENCES mwd.items ( item_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.weave_ars
    ADD CONSTRAINT weave_ars_fk FOREIGN KEY ( weave_id )
        REFERENCES mwd.weaves ( weave_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.weaves
    ADD CONSTRAINT weaves_fk FOREIGN KEY ( parent_weave_id )
        REFERENCES mwd.weaves ( weave_id )
            ON DELETE CASCADE;

ALTER TABLE mwd.wires
    ADD CONSTRAINT wires_fk FOREIGN KEY ( wire_id )
        REFERENCES mwd.raw_ingredients ( raw_ingredient_id )
            ON DELETE CASCADE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            45
-- CREATE INDEX                            69
-- ALTER TABLE                            173
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
